{"name": "测试挂号", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <cases.test_reg.Test_Register testMethod=test_register_01>\n\n    @allure.title('测试挂号')\n    @allure.story(\"测试挂号流程\")\n    def test_register_01(self):\n        self.driver.get(self.base_url)\n        picture = screen_shot(self.driver, \"自助机首页\")\n        allure.attach.file(picture, \"自助机首页\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(5)\n        self.page.register_click()\n        picture = screen_shot(self.driver, \"选择就诊卡类型\")\n        allure.attach.file(picture, \"选择就诊卡类型\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(5)\n        self.page.input_card_click()\n        picture = screen_shot(self.driver, \"输入就诊卡\")\n        allure.attach.file(picture, \"输入就诊卡\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n        self.page.card_input(card)\n        self.page.card_confirm()\n        picture = screen_shot(self.driver, \"查询科室\")\n        allure.attach.file(picture, \"查询科室\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n        self.page.get_depts()\n        picture = screen_shot(self.driver, \"查询就诊日期\")\n        allure.attach.file(picture, \"查询就诊日期\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n        self.page.get_date()\n        picture = screen_shot(self.driver, \"选择就诊上下午\")\n        allure.attach.file(picture, \"选择就诊上下午\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n        self.page.get_am()\n        picture = screen_shot(self.driver, \"查询就诊医生\")\n        allure.attach.file(picture, \"查询就诊医生\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n        self.page.get_docs()\n        picture = screen_shot(self.driver, \"查询剩余号源\")\n        allure.attach.file(picture, \"查询剩余号源\", attachment_type=allure.attachment_type.PNG)\n        time.sleep(7)\n>       self.page.get_regnum()\n\n..\\cases\\test_reg.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\register_case.py:122: in get_regnum\n    self.get_elements(self.reg_num)\n..\\page\\basepage.py:36: in get_elements\n    locs = self.find_elements(loc)\n..\\page\\basepage.py:30: in find_elements\n    return WebDriverWait(self.driver, 5, 0.5).until(EC.presence_of_all_elements_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b6b945b6f4abc5f9eb5d0a7c6f274b11\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x0000000004D25508>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\anaconda\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "-----点击门诊挂号-----", "status": "passed", "start": 1577076583129, "stop": 1577076583191}, {"name": "-----点击输入就诊卡号-----", "status": "passed", "start": 1577076588695, "stop": 1577076588896}, {"name": "-----输入就诊卡号-----", "status": "passed", "parameters": [{"name": "card_num", "value": "1904236007"}], "start": 1577076596270, "stop": 1577076596403}, {"name": "-----点击确认-----", "status": "passed", "start": 1577076596403, "stop": 1577076596469}, {"name": "-----查看就诊科室-----", "status": "passed", "start": 1577076603815, "stop": 1577076603913}, {"name": "-----查看时间-----", "status": "passed", "start": 1577076611288, "stop": 1577076611383}, {"name": "-----选择上下午-----", "status": "passed", "start": 1577076618748, "stop": 1577076618842}, {"name": "-----查看就诊医生-----", "status": "passed", "start": 1577076626210, "stop": 1577076626308}, {"name": "-----查看就诊号源-----", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\anaconda\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"D:\\code\\auto_interface\\page\\register_case.py\", line 122, in get_regnum\n    self.get_elements(self.reg_num)\n  File \"D:\\code\\auto_interface\\page\\basepage.py\", line 36, in get_elements\n    locs = self.find_elements(loc)\n  File \"D:\\code\\auto_interface\\page\\basepage.py\", line 30, in find_elements\n    return WebDriverWait(self.driver, 5, 0.5).until(EC.presence_of_all_elements_located(loc))\n  File \"D:\\anaconda\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1577076633676, "stop": 1577076638785}], "attachments": [{"name": "自助机首页", "source": "f44433b1-4f60-44cd-ab49-f6aa0bcb12ce-attachment.png", "type": "image/png"}, {"name": "选择就诊卡类型", "source": "bbd1338c-6180-426b-a85a-c474eabe0d94-attachment.png", "type": "image/png"}, {"name": "输入就诊卡", "source": "382b84c5-30cc-4164-b6fb-05ca32bfc3fb-attachment.png", "type": "image/png"}, {"name": "查询科室", "source": "9353d8a1-384f-4724-8333-545aaf7165e5-attachment.png", "type": "image/png"}, {"name": "查询就诊日期", "source": "c5be674a-5550-4f3c-bf3a-06d6defd49d5-attachment.png", "type": "image/png"}, {"name": "选择就诊上下午", "source": "6f63868c-08bb-4d1e-8e43-14f704a40244-attachment.png", "type": "image/png"}, {"name": "查询就诊医生", "source": "a519f871-c1d2-4cf4-a6c3-d67e6ae35015-attachment.png", "type": "image/png"}, {"name": "查询剩余号源", "source": "b43b1703-7a29-4373-8730-1bf2d31ca112-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "8d8976b2-65ac-4d08-848b-97ec5167b4ef-attachment.txt", "type": "text/plain"}], "start": 1577076574354, "stop": 1577076638786, "uuid": "6453baad-f218-44dd-96b4-829a8adc2479", "historyId": "e8552723c5671069b3fa8d50da4ee030", "testCaseId": "8d27e72091378a04aca564e6f6eb33d0", "fullName": "cases.test_reg.Test_Register#test_register_01", "labels": [{"name": "story", "value": "测试挂号流程"}, {"name": "feature", "value": "挂号流程测试"}, {"name": "parentSuite", "value": "cases"}, {"name": "suite", "value": "test_reg"}, {"name": "subSuite", "value": "Test_Register"}, {"name": "host", "value": "k-PC"}, {"name": "thread", "value": "11220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.test_reg"}]}